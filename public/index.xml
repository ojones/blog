<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oswald Jones</title>
    <link>http://ojones.github.io/blog/</link>
    <description>Recent content on Oswald Jones</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Oswald Jones</copyright>
    <lastBuildDate>Fri, 21 Oct 2016 19:25:22 -0800</lastBuildDate>
    <atom:link href="http://ojones.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Best Html Table Parser</title>
      <link>http://ojones.github.io/blog/html_table_parser/</link>
      <pubDate>Fri, 21 Oct 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/html_table_parser/</guid>
      <description>

&lt;h2 id=&#34;synopsis:2e8e527b21ef2deedced2078cd8e4e6a&#34;&gt;Synopsis&lt;/h2&gt;

&lt;p&gt;Transform html tables into usable data structures.  Using beautiful soup table object, return 2D array structure, dictionary, or array of column data.  Imputes cell values from row and col spans :)&lt;/p&gt;

&lt;h2 id=&#34;code-example:2e8e527b21ef2deedced2078cd8e4e6a&#34;&gt;Code Example&lt;/h2&gt;

&lt;p&gt;Given an html table (with or without row and col spans). You can make a 2D array&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;soup = bs(YOUR_HTML_TABLE, &amp;quot;html.parser&amp;quot;)
test_table = soup.find(&#39;table&#39;)
twod_array = parse.make2d(test_table)

# print 2D array
print(twod_array)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Use that 2D array to return column data by heading name&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# print column data by col heading name (case insensitive)
print(parse.twod_col_data(twod_array, &#39;first name&#39;))
print(parse.twod_col_data(twod_array, &#39;lAst naMe&#39;))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or transform the soup table object (test_table) into a dictionary&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# row data begins on first row after col headings
# so rowstart is 1
print(parse.make_dict(test_table, 1))
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;motivation:2e8e527b21ef2deedced2078cd8e4e6a&#34;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;I looked everywhere for the code to transform html tables with row and col spans into a 2D array and couldn&amp;rsquo;t find it.  So I thought how hard could it be to quickly write my own.  It was actally kinda hard, so here it is for the next guy.&lt;/p&gt;

&lt;h2 id=&#34;installation:2e8e527b21ef2deedced2078cd8e4e6a&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;So far html_table_parser is just a module with parser functions.  It works on Python 2.7 and Python 3.4.&lt;/p&gt;

&lt;h2 id=&#34;tests:2e8e527b21ef2deedced2078cd8e4e6a&#34;&gt;Tests&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; py.test
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;contributors:2e8e527b21ef2deedced2078cd8e4e6a&#34;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;Don&amp;rsquo;t be shy.&lt;/p&gt;

&lt;h2 id=&#34;license:2e8e527b21ef2deedced2078cd8e4e6a&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;MIT&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accountable Delivery</title>
      <link>http://ojones.github.io/blog/post/accountableDelivery/</link>
      <pubDate>Sat, 23 Jan 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/post/accountableDelivery/</guid>
      <description>&lt;p&gt;Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin onion chickpea gram corn pea. Brussels sprout coriander water chestnut gourd swiss chard wakame kohlrabi beetroot carrot watercress. Corn amaranth salsify bunya nuts nori azuki bean chickweed potato bell pepper artichoke.&lt;/p&gt;

&lt;p&gt;Nori grape silver beet broccoli kombu beet greens fava bean potato quandong celery. Bunya nuts black-eyed pea prairie turnip leek lentil turnip greens parsnip. Sea lettuce lettuce water chestnut eggplant winter purslane fennel azuki bean earthnut pea sierra leone bologi leek soko chicory celtuce parsley jÃ­cama salsify.&lt;/p&gt;

&lt;p&gt;Celery quandong swiss chard chicory earthnut pea potato. Salsify taro catsear garlic gram celery bitterleaf wattle seed collard greens nori. Grape wattle seed kombu beetroot horseradish carrot squash brussels sprout chard.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Business Logic vs Technical Requirements</title>
      <link>http://ojones.github.io/blog/post/bizLogicVsTechReqs/</link>
      <pubDate>Sat, 23 Jan 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/post/bizLogicVsTechReqs/</guid>
      <description>&lt;p&gt;Pea horseradish azuki bean lettuce avocado asparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard tigernut jÃ­cama green bean celtuce collard greens avocado quandong fennel gumbo black-eyed pea. Grape silver beet watercress potato tigernut corn groundnut. Chickweed okra pea winter purslane coriander yarrow sweet pepper radish garlic brussels sprout groundnut summer purslane earthnut pea tomato spring onion azuki bean gourd. Gumbo kakadu plum komatsuna black-eyed pea green bean zucchini gourd winter purslane silver beet rock melon radish asparagus spinach.&lt;/p&gt;

&lt;p&gt;Beetroot water spinach okra water chestnut ricebean pea catsear courgette summer purslane. Water spinach arugula pea tatsoi aubergine spring onion bush tomato kale radicchio turnip chicory salsify pea sprouts fava bean. Dandelion zucchini burdock yarrow chickpea dandelion sorrel courgette turnip greens tigernut soybean radish artichoke wattle seed endive groundnut broccoli arugula.&lt;/p&gt;

&lt;p&gt;Soko radicchio bunya nuts gram dulse silver beet parsnip napa cabbage lotus root sea lettuce brussels sprout cabbage. Catsear cauliflower garbanzo yarrow salsify chicory garlic bell pepper napa cabbage lettuce tomato kale arugula melon sierra leone bologi rutabaga tigernut. Sea lettuce gumbo grape kale kombu cauliflower salsify kohlrabi okra sea lettuce broccoli celery lotus root carrot winter purslane turnip greens garlic. JÃ­cama garlic courgette coriander radicchio plantain scallion cauliflower fava bean desert raisin spring onion chicory bunya nuts. Sea lettuce water spinach gram fava bean leek dandelion silver beet eggplant bush tomato.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cityholla</title>
      <link>http://ojones.github.io/blog/cityhollalanding/</link>
      <pubDate>Sat, 23 Jan 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/cityhollalanding/</guid>
      <description>

&lt;h1 id=&#34;cityholla-landing-page:a49397842d3bcbafe692d19dec0e020b&#34;&gt;Cityholla landing page&lt;/h1&gt;

&lt;p&gt;You can view the rendered site at &lt;a href=&#34;http://www.cityholla.com/&#34;&gt;cityholla.com&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Good Code</title>
      <link>http://ojones.github.io/blog/post/goodCode/</link>
      <pubDate>Sat, 23 Jan 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/post/goodCode/</guid>
      <description>&lt;p&gt;Pea horseradish azuki bean lettuce avocado asparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard tigernut jÃ­cama green bean celtuce collard greens avocado quandong fennel gumbo black-eyed pea. Grape silver beet watercress potato tigernut corn groundnut. Chickweed okra pea winter purslane coriander yarrow sweet pepper radish garlic brussels sprout groundnut summer purslane earthnut pea tomato spring onion azuki bean gourd. Gumbo kakadu plum komatsuna black-eyed pea green bean zucchini gourd winter purslane silver beet rock melon radish asparagus spinach.&lt;/p&gt;

&lt;p&gt;Beetroot water spinach okra water chestnut ricebean pea catsear courgette summer purslane. Water spinach arugula pea tatsoi aubergine spring onion bush tomato kale radicchio turnip chicory salsify pea sprouts fava bean. Dandelion zucchini burdock yarrow chickpea dandelion sorrel courgette turnip greens tigernut soybean radish artichoke wattle seed endive groundnut broccoli arugula.&lt;/p&gt;

&lt;p&gt;Soko radicchio bunya nuts gram dulse silver beet parsnip napa cabbage lotus root sea lettuce brussels sprout cabbage. Catsear cauliflower garbanzo yarrow salsify chicory garlic bell pepper napa cabbage lettuce tomato kale arugula melon sierra leone bologi rutabaga tigernut. Sea lettuce gumbo grape kale kombu cauliflower salsify kohlrabi okra sea lettuce broccoli celery lotus root carrot winter purslane turnip greens garlic. JÃ­cama garlic courgette coriander radicchio plantain scallion cauliflower fava bean desert raisin spring onion chicory bunya nuts. Sea lettuce water spinach gram fava bean leek dandelion silver beet eggplant bush tomato.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Programming is Just the New Writing</title>
      <link>http://ojones.github.io/blog/post/programmingIsJustTheNewWriting/</link>
      <pubDate>Sat, 23 Jan 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/post/programmingIsJustTheNewWriting/</guid>
      <description>&lt;p&gt;Pea horseradish azuki bean lettuce avocado asparagus okra. Kohlrabi radish okra azuki bean corn fava bean mustard tigernut jÃ­cama green bean celtuce collard greens avocado quandong fennel gumbo black-eyed pea. Grape silver beet watercress potato tigernut corn groundnut. Chickweed okra pea winter purslane coriander yarrow sweet pepper radish garlic brussels sprout groundnut summer purslane earthnut pea tomato spring onion azuki bean gourd. Gumbo kakadu plum komatsuna black-eyed pea green bean zucchini gourd winter purslane silver beet rock melon radish asparagus spinach.&lt;/p&gt;

&lt;p&gt;Beetroot water spinach okra water chestnut ricebean pea catsear courgette summer purslane. Water spinach arugula pea tatsoi aubergine spring onion bush tomato kale radicchio turnip chicory salsify pea sprouts fava bean. Dandelion zucchini burdock yarrow chickpea dandelion sorrel courgette turnip greens tigernut soybean radish artichoke wattle seed endive groundnut broccoli arugula.&lt;/p&gt;

&lt;p&gt;Soko radicchio bunya nuts gram dulse silver beet parsnip napa cabbage lotus root sea lettuce brussels sprout cabbage. Catsear cauliflower garbanzo yarrow salsify chicory garlic bell pepper napa cabbage lettuce tomato kale arugula melon sierra leone bologi rutabaga tigernut. Sea lettuce gumbo grape kale kombu cauliflower salsify kohlrabi okra sea lettuce broccoli celery lotus root carrot winter purslane turnip greens garlic. JÃ­cama garlic courgette coriander radicchio plantain scallion cauliflower fava bean desert raisin spring onion chicory bunya nuts. Sea lettuce water spinach gram fava bean leek dandelion silver beet eggplant bush tomato.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why Aren&#39;t There More Women In Software</title>
      <link>http://ojones.github.io/blog/post/whyArentThereMoreWomenInSoftware/</link>
      <pubDate>Sat, 23 Jan 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/post/whyArentThereMoreWomenInSoftware/</guid>
      <description>&lt;p&gt;Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin onion chickpea gram corn pea. Brussels sprout coriander water chestnut gourd swiss chard wakame kohlrabi beetroot carrot watercress. Corn amaranth salsify bunya nuts nori azuki bean chickweed potato bell pepper artichoke.&lt;/p&gt;

&lt;p&gt;Nori grape silver beet broccoli kombu beet greens fava bean potato quandong celery. Bunya nuts black-eyed pea prairie turnip leek lentil turnip greens parsnip. Sea lettuce lettuce water chestnut eggplant winter purslane fennel azuki bean earthnut pea sierra leone bologi leek soko chicory celtuce parsley jÃ­cama salsify.&lt;/p&gt;

&lt;p&gt;Celery quandong swiss chard chicory earthnut pea potato. Salsify taro catsear garlic gram celery bitterleaf wattle seed collard greens nori. Grape wattle seed kombu beetroot horseradish carrot squash brussels sprout chard.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>welcome</title>
      <link>http://ojones.github.io/blog/post/welcome/</link>
      <pubDate>Sat, 23 Jan 2016 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/post/welcome/</guid>
      <description>&lt;p&gt;Veggies es bonus vobis, proinde vos postulo essum magis kohlrabi welsh onion daikon amaranth tatsoi tomatillo melon azuki bean garlic.&lt;/p&gt;

&lt;p&gt;Gumbo beet greens corn soko endive gumbo gourd. Parsley shallot courgette tatsoi pea sprouts fava bean collard greens dandelion okra wakame tomato. Dandelion cucumber earthnut pea peanut soko zucchini.&lt;/p&gt;

&lt;p&gt;Turnip greens yarrow ricebean rutabaga endive cauliflower sea lettuce kohlrabi amaranth water spinach avocado daikon napa cabbage asparagus winter purslane kale. Celery potato scallion desert raisin horseradish spinach carrot soko. Lotus root water spinach fennel kombu maize bamboo shoot green bean swiss chard seakale pumpkin onion chickpea gram corn pea. Brussels sprout coriander water chestnut gourd swiss chard wakame kohlrabi beetroot carrot watercress. Corn amaranth salsify bunya nuts nori azuki bean chickweed potato bell pepper artichoke.&lt;/p&gt;

&lt;p&gt;Nori grape silver beet broccoli kombu beet greens fava bean potato quandong celery. Bunya nuts black-eyed pea prairie turnip leek lentil turnip greens parsnip. Sea lettuce lettuce water chestnut eggplant winter purslane fennel azuki bean earthnut pea sierra leone bologi leek soko chicory celtuce parsley jÃ­cama salsify.&lt;/p&gt;

&lt;p&gt;Celery quandong swiss chard chicory earthnut pea potato. Salsify taro catsear garlic gram celery bitterleaf wattle seed collard greens nori. Grape wattle seed kombu beetroot horseradish carrot squash brussels sprout chard.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Best Wikipedia Parser</title>
      <link>http://ojones.github.io/blog/wikipedia_parser/</link>
      <pubDate>Fri, 02 Oct 2015 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/wikipedia_parser/</guid>
      <description>

&lt;h2 id=&#34;synopsis:907c88537397ec981ae3b6c17395c58b&#34;&gt;Synopsis&lt;/h2&gt;

&lt;p&gt;Uses Wikipedia API to store page id, title, html, wiki text, expanded templates, categories, page links, and summary in one class object for easy reference.  Also parses infobox data from wiki text, including page name, template name, image name, image url, and labeled key value data.&lt;/p&gt;

&lt;h2 id=&#34;code-example:907c88537397ec981ae3b6c17395c58b&#34;&gt;Code Example&lt;/h2&gt;

&lt;p&gt;Instantiate Wikipedia API object with page name or id:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# wikipedia id can be digit or name (redirects are handled :)
page = &#39;Ada_Lovelace&#39;
wiki_api = WikipediaAPI(page)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the print list of available api resources&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt; print(dir(wiki_api))
[   ...
    &#39;categories&#39;,
    &#39;expanded_html&#39;,
    &#39;html&#39;,
    &#39;page_id&#39;,
    &#39;page_links&#39;,
    &#39;search_id&#39;,
    &#39;summary&#39;,
    &#39;title&#39;,
    &#39;wiki_text&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If an infobox is present on page, you can parse the infobox data:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# wiki text can be from anywhere, does not need to come from WikipediaAPI object
wiki_text = wiki_api.wiki_text
infobox = Infobox(wiki_text)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is the print list of available attributes&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;&amp;gt; print(dir(infobox))
[   ...
    &#39;data&#39;,
    &#39;image_filename&#39;,
    &#39;image_url&#39;,
    &#39;page_name&#39;,
    &#39;template_name&#39;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Infobox &amp;ldquo;data&amp;rdquo; is a dict of plain_text (ie no wiki templates), raw_text, and wiki links to other pages.
&lt;br&gt;Compare with &lt;a href=&#34;https://en.wikipedia.org/wiki/Ada_Lovelace&#34;&gt;Ada_Lovelace&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;{   u&#39;birth_date&#39;: {   &#39;plain_text&#39;: u&#39;&#39;,
                       &#39;raw_text&#39;: u&#39;{{birth date|1815|12|10|df=yes}}&#39;,
                       &#39;wiki_links&#39;: []},
    u&#39;birth_name&#39;: {   &#39;plain_text&#39;: u&#39;The Hon. Augusta Ada Byron&#39;,
                       &#39;raw_text&#39;: u&#39;The Hon. Augusta Ada Byron&#39;,
                       &#39;wiki_links&#39;: []},
    u&#39;birth_place&#39;: {   &#39;plain_text&#39;: u&#39;London, England&#39;,
                        &#39;raw_text&#39;: u&#39;London, England&#39;,
                        &#39;wiki_links&#39;: []},
    u&#39;caption&#39;: {   &#39;plain_text&#39;: u&#39;Ada, Countess of Lovelace, 1840&#39;,
                    &#39;raw_text&#39;: u&#39;Ada, Countess of Lovelace, 1840&#39;,
                    &#39;wiki_links&#39;: []},
    u&#39;children&#39;: {   &#39;plain_text&#39;: u&#39;&#39;,
                     &#39;raw_text&#39;: u&#39;{{plainlist |\n* [[Byron King-Noel, Viscount Ockham|Byron King-Noel, Viscount Ockham and 12th Baron Wentworth]]\n* [[Anne Blunt, 15th Baroness Wentworth]]\n* [[Ralph King-Milbanke, 2nd Earl of Lovelace]]}}&#39;,
                     &#39;wiki_links&#39;: [   u&#39;Byron King-Noel, Viscount Ockham&#39;,
                                       u&#39;Anne Blunt, 15th Baroness Wentworth&#39;,
                                       u&#39;Ralph King-Milbanke, 2nd Earl of Lovelace&#39;]},
    u&#39;death_date&#39;: {   &#39;plain_text&#39;: u&#39;&#39;,
                       &#39;raw_text&#39;: u&#39;{{death date and age|1852|11|27|1815|12|10|df=yes}}&#39;,
                       &#39;wiki_links&#39;: []},
    u&#39;death_place&#39;: {   &#39;plain_text&#39;: u&#39;Marylebone, London, England&#39;,
                        &#39;raw_text&#39;: u&#39;[[Marylebone]], London, England&#39;,
                        &#39;wiki_links&#39;: [u&#39;Marylebone&#39;]},
    u&#39;field&#39;: {   &#39;plain_text&#39;: u&#39;Mathematics, computing&#39;,
                  &#39;raw_text&#39;: u&#39;Mathematics, computing&#39;,
                  &#39;wiki_links&#39;: []},
    u&#39;image&#39;: {   &#39;plain_text&#39;: u&#39;Ada Lovelace portrait.jpg&#39;,
                  &#39;raw_text&#39;: u&#39;Ada Lovelace portrait.jpg&#39;,
                  &#39;wiki_links&#39;: []},
    u&#39;name&#39;: {   &#39;plain_text&#39;: u&#39;Ada, Countess of Lovelace&#39;,
                 &#39;raw_text&#39;: u&#39;Ada, Countess of Lovelace&#39;,
                 &#39;wiki_links&#39;: []},
    u&#39;parents&#39;: {   &#39;plain_text&#39;: u&#39;&#39;,
                    &#39;raw_text&#39;: u&#39;{{plainlist |\n* [[Lord Byron|George Gordon Byron, 6th Baron Byron]]\n* [[Anne Isabella Byron, Baroness Byron|Anne Isabella Milbanke, 11th Baroness Wentworth]]\n  }}&#39;,
                    &#39;wiki_links&#39;: [u&#39;Lord Byron&#39;, u&#39;Anne Isabella Byron, Baroness Byron&#39;]},
    u&#39;resting_place&#39;: {   &#39;plain_text&#39;: u&#39;Church of St. Mary Magdalene, Hucknall, Nottingham, England&#39;,
                          &#39;raw_text&#39;: u&#39;[[Church of St. Mary Magdalene, Hucknall]], Nottingham, England&#39;,
                          &#39;wiki_links&#39;: [u&#39;Church of St. Mary Magdalene, Hucknall&#39;]},
    u&#39;spouse&#39;: {   &#39;plain_text&#39;: u&#39;William King-Noel, 1st Earl of Lovelace&#39;,
                   &#39;raw_text&#39;: u&#39;[[William King-Noel, 1st Earl of Lovelace]]&#39;,
                   &#39;wiki_links&#39;: [u&#39;William King-Noel, 1st Earl of Lovelace&#39;]},
    u&#39;title&#39;: {   &#39;plain_text&#39;: u&#39;Countess of Lovelace&#39;,
                  &#39;raw_text&#39;: u&#39;Countess of Lovelace&#39;,
                  &#39;wiki_links&#39;: []}}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;motivation:907c88537397ec981ae3b6c17395c58b&#34;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/spencermountain/wtf_wikipedia&#34;&gt;wtf_wikipedia&lt;/a&gt; and &lt;a href=&#34;https://github.com/earwig/mwparserfromhell&#34;&gt;mwparserfromhell&lt;/a&gt; were the best wikipedia parsers I could find.  This one is better.&lt;/p&gt;

&lt;h2 id=&#34;installation:907c88537397ec981ae3b6c17395c58b&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Currently only works on Python 2.7 :(&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; python setup.py install
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;tests:907c88537397ec981ae3b6c17395c58b&#34;&gt;Tests&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; py.text
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;contributors:907c88537397ec981ae3b6c17395c58b&#34;&gt;Contributors&lt;/h2&gt;

&lt;p&gt;Don&amp;rsquo;t be shy.  Needs a couple updats for Python 3. Could use more functions to parse wiki templates such as &amp;ldquo;{{plainlist}}&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;license:907c88537397ec981ae3b6c17395c58b&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;MIT&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>http://ojones.github.io/blog/about/</link>
      <pubDate>Mon, 10 Aug 2015 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/about/</guid>
      <description>&lt;p&gt;I am a data engineer at Mediahound where I work on The Entertainment Graph &amp;trade; powered by Neo4j.&lt;/p&gt;

&lt;p&gt;I love coding in Python, Javascript, and C#, but am also interested in the functional languages (Ruby is also fun).  This blog is powered by Hugo, which is coded in Go.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CordFlow</title>
      <link>http://ojones.github.io/blog/cordflow/</link>
      <pubDate>Thu, 21 May 2015 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/cordflow/</guid>
      <description>

&lt;h2 id=&#34;synopsis:1665c900a994357c0fd7bd49c23dfebe&#34;&gt;Synopsis&lt;/h2&gt;

&lt;p&gt;Nifty proof of concept that demonstrates how to convert paper to JSON.  Also demonstrates how the json object can be used to automatically generate a web form and apply the answers back to paper.&lt;/p&gt;

&lt;h2 id=&#34;motivation:1665c900a994357c0fd7bd49c23dfebe&#34;&gt;Motivation&lt;/h2&gt;

&lt;p&gt;We made this for a contest as a proof of concept.  There are still so many government paper forms.  Even fillable pdfs don&amp;rsquo;t easily let you apply webform data.  This project proves you can use javascript to convert paper into web objects with just an image of the paper form.&lt;/p&gt;

&lt;h2 id=&#34;installation:1665c900a994357c0fd7bd49c23dfebe&#34;&gt;Installation&lt;/h2&gt;

&lt;p&gt;Just open the index.html file in your web browser.&lt;/p&gt;

&lt;h2 id=&#34;license:1665c900a994357c0fd7bd49c23dfebe&#34;&gt;License&lt;/h2&gt;

&lt;p&gt;MIT&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Twitter Sentiment</title>
      <link>http://ojones.github.io/blog/ga_data_science/</link>
      <pubDate>Mon, 12 Jan 2015 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/ga_data_science/</guid>
      <description>

&lt;h1 id=&#34;ga-data-science:c964ef5fbd6dbe73fd0e1e3f23d8df54&#34;&gt;ga_data_science&lt;/h1&gt;

&lt;p&gt;Class project from General Assembly Data Science course&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ML Class Library</title>
      <link>http://ojones.github.io/blog/coursera_ml_library/</link>
      <pubDate>Thu, 09 Oct 2014 19:25:22 -0800</pubDate>
      
      <guid>http://ojones.github.io/blog/coursera_ml_library/</guid>
      <description>

&lt;h1 id=&#34;coursera-ml-library:05cc7019e530c66bcb8351b9cd27f681&#34;&gt;coursera_ml_library&lt;/h1&gt;

&lt;p&gt;Project for Coursera Machine Learning class with Stanford Professor Andrew Ng&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>